package game

import (
	"prompt-game/internal/models"
	"prompt-game/views/components"
)

templ InstructionsPane(level models.Level, validation models.LevelValidation) {
	<div id="instruction-pane" class="pl-20 h-full">
		@LevelHtml(level)
		if (!validation.Strategy || !validation.Answer) && !validation.Ignore {
			@LevelFeedbackHtml(validation.Strategy, validation.Answer)
		}
	</div>
}

templ LevelHtml(level models.Level) {
	<div class="h-full flex flex-col justify-center">
		<div class="h-full" style="padding-top: 5%; padding-bottom: 15%;">
			<h2 class="font-bold text-textcolor text-3xl text-center pb-4">{ level.Title }</h2>
			<div class="rounded-xl p-4 bg-secondary flex flex-col justify-between h-full">
				<p class="text-textcolor text-lg">{ level.Description }</p>
				<div class="pt-4 flex flex-row space-x-4 justify-end w-full">
					<div id="reset-button" type="button" class="" onclick="onResetClick()">
						@components.Button1() {
                            @components.ResetIcon(6)
                        }
					</div>
					<div
						id="submit-button"
						hx-post="/level/submit"
						hx-swap="outerHTML"
						hx-target="#instruction-pane"
						hx-vals="js:{messages: localStorage.getItem('message-history')}"
					>
						@components.Button1() {
                            @components.CheckmarkIcon(6)
						}
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ LevelFeedbackHtml(validStrategy bool, validAnswer bool) {
	if validStrategy {
		<p class="text-green-600">valid strategy</p>
	} else {
		<p class="text-red-600">stragety not valid</p>
	}
	if validAnswer {
		<p class="text-green-600">valid answer</p>
	} else {
		<p class="text-red-600">answer not valid</p>
	}
}
