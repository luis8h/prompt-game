package game

import (
	"prompt-game/internal/models"
	"prompt-game/views/components"
	"prompt-game/utils"
    "github.com/invopop/ctxi18n/i18n"
)

templ InstructionsPane(level models.Level, validation models.LevelValidation) {
	<div id="instruction-pane" class="pl-20 h-full">
		@LevelHtml(level, validation)
	</div>
}

templ LevelHtml(level models.Level, validation models.LevelValidation) {
    test
    {i18n.T(ctx, "hello")}
	<div class="h-full flex flex-col justify-center">
        <a href="/en">switch</a>
		<div class="h-full" style="padding-top: 5%; padding-bottom: 15%;">
			<h2 class="font-bold text-textcolor text-3xl text-center pb-4">{ level.Title }</h2>
			<div class="rounded-xl p-4 bg-secondary flex flex-col justify-between h-full">
                <div class="text-textcolor">
                    <p class="text-textcolor text-lg">@templ.Raw(utils.RenderMarkdown(level.Description))</p>
                </div>
				<div id="validation-indicator" class="htmx-indicator">
					@components.DotLoading(6)
				</div>
				<div class="flex flex-row justify-between">
					<div class="">
						@LevelFeedbackHtml(validation)
					</div>
					<div class="flex flex-row space-x-4 justify-end">
						<div id="reset-button" type="button" class="" onclick="onResetClick()">
							@components.Button1() {
								@components.ResetIcon(6)
							}
						</div>
						<div
							id="submit-button"
							hx-post="/level/submit"
							hx-swap="outerHTML"
							hx-target="#instruction-pane"
							hx-indicator="#validation-indicator"
							hx-vals="js:{messages: localStorage.getItem('message-history')}"
						>
							@components.Button1() {
								@components.CheckmarkIcon(6)
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ LevelFeedbackHtml(validation models.LevelValidation) {
	<div class="flex flex-row space-x-4">
		if !validation.Ignore {
			@ValidationCardHtml("Task", validation.Answer)
			@ValidationCardHtml("Strategy", validation.Strategy)
		}
	</div>
}

templ ValidationCardHtml(name string, valid bool) {
	<div class="flex flex-row bg-primary p-2 space-x-2 rounded-xl w-fit">
		<p class="text-textcolor font-bold">{ name }</p>
		<div class="text-highlight">
			if valid {
				@components.CheckmarkIcon(6)
			} else {
				@components.XmarkIcon(6)
			}
		</div>
	</div>
}
