package game

import (
	"bytes"
	"github.com/yuin/goldmark"
	"prompt-game/views/components"
)

type Message struct {
	Role    string `json:"role"`
	Content string `json:"content"`
}

templ ChatPane() {
	<div class="pt-4 pr-20 h-full flex flex-col w-full overflow-hidden">
		<div
			id="chat"
			class="bg-primary flex-grow space-y-4 overflow-y-auto text-white"
			hx-post="/history"
			hx-trigger="load, reset-trigger from:body"
			hx-swap="innerHTML"
			hx-on="htmx:afterSwap:scrollChatToTop()"
            hx-on::after-request="scrollChatToTop()"
			data-simplebar
			data-simplebar-auto-hide="false"
		></div>
		<div class="flex-none p-4 pt-0">
			<div class="flex items-center justify-center bg-secondary rounded-lg">
				<textarea
					id="prompt-input"
					name="message"
					placeholder="Type your message..."
					style="max-height: 50rem; border: none !important;"
					class="placeholder:text-secondary text-xl bg-secondary no-scroll flex-grow text-white rounded-xl px-2 py-2 resize-none outline-none rounded-r-none"
					rows="1"
				></textarea>
				<div
					id="send-button"
					hx-post="/message/user"
					hx-target="#chat-history"
					hx-swap="beforeend"
					hx-include="#prompt-input"
					hx-trigger="click, hx:afterRequest:send-prompt"
					class="py-2 px-2 text-white focus:outline-none"
				>
					@components.Button1() {
                        @components.SendIcond(5)
					}
				</div>
			</div>
		</div>
	</div>
}

templ ChatHistory(messages []Message) {
	<div id="chat-history" class="flex flex-col overflow-hidden space-y-8 p-6">
		for _, message := range messages {
			@ChatMessage(message)
		}
	</div>
	<div id="chat-loading" class="hidden pb-8">
		@components.DotLoading(3)
	</div>
}

func IsUser(role string) bool {
	if role == "user" {
		return true
	}
	return false
}

func renderMarkdown(content string) (string, error) {
	var buf bytes.Buffer
	md := goldmark.New()
	if err := md.Convert([]byte(content), &buf); err != nil {
		return "", err
	}
	return buf.String(), nil
}

templ ChatMessage(message Message) {
	<div class={ "flex items-start" , "space-x-4" , templ.KV("flex-row-reverse", IsUser(message.Role)) }>
		<div class={ "rounded-xl max-w-full text-textcolor" , templ.KV("p-3 bg-secondary", IsUser(message.Role)) }>
			<div class="text-lg">
				@templ.Raw(renderMarkdown(message.Content))
			</div>
		</div>
		<script>hljs.highlightAll();</script>
	</div>
}
